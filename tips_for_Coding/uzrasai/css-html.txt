
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<VSCode>>>>>>>>>>>>>>>>>>>>>>>>>>>

IDE 			The Integrated Development Environment (IDE) can be understood as a software application that provides a user interface for code development, testing, and debugging. VSCode is one of IDE.


Open TERMINAL		You can also open the terminal by pressing Ctrl + Alt + shift + `
build in "TERMINAL"	ON Visual Studio Code  by pressing Ctrl + ` (backtick)

pasword			on vscode if it's reqoured fill the pasword you cant see it filling in code line, but it's filling. So you nead type full pasword and pres return.


SAVE THE FILE
Ctrl + S		<issaugo failo pakeitimus paciam faile, bet nepakeicia i "stage" arba "commited" busena.
			 Taciau yra butina funkcija norint padaryti stage ir commit>.
"git add ."		<comand for staging in terminal>
"git commit -m ."	<comand for commiting in terminal>.
"git commit"		<To make a commit with VSCode, after you hit Enter a new tab in VS Code will open for you to write your commit message.
			 After typing your commit message, save it Ctrl + S and close the tab>.





<<<<<<<<<<<<<<<<  HTML  >>>>>>>>>>>>>>>>>

<tag>		< > it calls tag or element
attribute=" "		it calls attribute
"value"		it calls value and it's inside attribute qoutation marks

FULL TEMPLATE		<tag attribute="value" attribute="value"> </tag> An HTML attribute gives additional information to an HTML element and always goes in the element’s opening tag. An attribute is usually made up of two parts: a name, and a value; however, not all attributes require a value.

FULL FOR IMAGE		<img srs="untitled.png" alt.untitled_picture">

 
Ctrl + ` 		Open build in "TERMINAL" ON Visual Studio Code  by pressing Ctrl + ` (backtick)

Ctrl + S		SAVE THE FILE, issaugo failo pakeitimus paciam faile.


<!-- -->		<for adding coment in html file use this template> shortcut "ctr+/"

:emoji		to add emoji in html file type colon ":" and start typing emoji name f.ex. "smi" it should giv eyou the option of smile.

#startTyping		it's a short cut for adding "id element" into html file, just type # and name of id you want and press enter
		it will give complete "<div id="startTyping"></div>"
		
<html5>		<simply Automaticly creat new boilerplate. Just wright htm and chose from the list html:5 and clich return>

<img>		"img" is self closing element, so it's no nead closing tag.
src=""		to add image in page we using "srs" attribute
<img src="">		adding comand in to html file "<img src="https://for-exaple.com/400/400" alt="empty plate picture"> it will add photos in to your site from the internet and it calls absolute path
			adding comand in to html file "<img src="images/untitled.jpg" alt="untitled picture"> it will add photos in to your site from the root directory, so make sure it's in where. It calls realetive path
alt=""			alt="untitled picture"> this atribute ads description to picture and it shows in you web if picture will broke. Also it could be usefull for SEO and screan readers.
height=""		heihgt and width atribute adds values to the picture it's always a good practice to add this attributes on every image, even if using CSS to modify it.
width=""		


<a>		To create a link in HTML, we use the anchor element. An anchor element is defined by wrapping the text or another HTML element we want to be a link with an <a> tag.

<a href="">		An HTML attribute gives additional information to an HTML element and always goes in the element’s opening tag.

href="absolute"	adding liks in to html file "<a href="http://www.google.com">Click me</a> moves you to the link in the internet and it calls absolute path
href="relative"	adding liks in to html file "<a href="www.google.com">Click me</a> moves you to the link in your computer on the same 							  		directory and it calls realetive path
href="./New_folder"	if the linked file is in your root directory, but in the different folder inside the root folder you should add realetive path like this "./New_folder/file_name.html"


target=""		"target" attribute specifies where the linked resource will be opened.
"_blank"		To open the link in a new tab or window (depends on browser settings) you can set it to target="_blank" value.
"_self"		To open the link in a curent tab you can set it to target="_self". If the target attribute not presented, by default it will open link in the same tab as the webpage containing.

rel=""		"rel" attribute  is used to describe the relation between the current page and the linked document.
"noopener"		The "noopener" value prevents the opened link from gaining access to the webpage from which it was opened.
"noreferrer"		The "noreferrer" value prevents the opened link from knowing which webpage or resource has a link (or ‘reference’) to it.
			It is recommended to always pair a target="_blank" with a rel="noopener noreferrer".




<<<<<<<<<<<<<<<<  CSS   >>>>>>>>>>>>>>>>>>>>
css types		External CSS, Internal CSS, Inline CSS.
	
External CSS		<head>
in HTML file		  <link rel="stylesheet" href="styles.css" />
		</head>
		
Internal CSS		<head>
in HTML file		  <style> /*Your code*? </style>
		</head>




___________________________RULES & RULESET____________________________________________________________________________


Syntax structure of CSS it calls "Rule" or "Rule set" and it compose 3 parts: the selector, the property and the value.

Selector is: "div" "p"		div {
curly braces - "{}"			color: white;
		  			background-color: black;
property is: "color"		}
"background-color"			
				p {
value is: "white" "black"		color: red;
"red"				}


Declaration		 	A property and value pair is called a declaration.
				"color:" is property
				"red;" is value
				"color: red;" is declaration
----------------------------------------------
Specificity		there are 3 levels of importance and aditional one is inline CSS witch always win.
TOP LEVEL "inline css"	style="color:red"
1.0.0. level "ID"	#id {color: red;}
0.1.0. level "class"	.class {color: red;}
0.0.1. level "elements" p {color: red;}

----------------------------------------------
Selector & Combinators

SELECTOR		*, no space.
*			"universal selector" it has no specificity value.
no space 		"chaining selector", using no space for ex. ".class.second-class{}"

COMBINATORS		empty space, +, ~, >.
empty space		"descendant combinator" using empty space for ex. ".class .second-class{}"
>			"child combinator" using > sign for ex. ".class > .second-class{}"
.property > *		one more ex. how to use less sign to chose all direct child for specific property so you can add some rules for them
			.property > * {
			
			}
			
			
			


----------------------------------------------
/*  */			<for adding coment in css  file use this template> shortcut "ctr+/"

*			The universal selector will select elements of any type, hence the name “universal”, and the syntax for it is a simple asterisk.

type selector		<div> <p> it can be caled also as "element selector"
			In general, you can’t chain more than one type selector since an element can’t be two different types at once. 

selector element	<div class=""> <div id="">
			but you can take the two elements and combine them.

.subsection.header	selects any element that has both the subsection and header classes.
			you can chain any combination of selectors, except for chaining more than one type selector.

.ancestor .contents	descendant combinatorin in CSS is represented  by a single space between selectors.
			A descendant combinator will only cause elements that match the last selector to be selected 
			"child" will only be selected if it is nested inside "ancestor", regardless of how deep that nesting is.
			There’s really no limit to how many combinators you can add to a rule, so .one .two .three .four would be totally valid.  




-----------------------------------------------------------------------

div { }		A type selector (or element selector) will select all elements of the given element type, and the syntax is just the name of the element.

div class		- Class selectors will select all elements with the given class, which is just an attribute you place on an HTML element. 

HTML		<div class="alert-text">Please agree to our terms of service.</div>

CSS		.alert-text {
  		 color: red;
		}

<<<NOTES>>>		- the syntax for class selectors: a period "." immediately followed by the case-sensitive value of the class attribute.
		- you can add multiple classes to a single element as a space-separated list in html, such as <<class="alert-text severe-alert">>.
		- with a "," (coma) you can add few diferent selector for one rule. In ex.:
		.alert-text, .severe-alert{
		}


div id		- select an element with the given ID, which is another attribute you place on an HTML element.

HTML		<div id="title">My Awesome 90's Page</div>

CSS		#title {
		  background-color: red;
		}

<<<NOTES>>>		- For IDs we use a hashtag "#" immediately followed by the case-sensitive value of the ID attribute. 
		- The major difference between classes and IDs is that an element can only have one ID.
		
<<ShortCut>>		when adding "id" element into html file just write for ex. "div#test" and press enter it will automaticly turn into <div id="test"></div>
-----------------------------------------------------------------------
 		FLEXBOX

	<<< For PARENT >>>

display: flex		.property {
use this for 		diplay: flex;
			flex-direction: row; (default)
parent 		 	justify-content: flex-start; (default)
			align-iteams: stretch; (default)
			
			flex-wrap: wrap; or no-wrap;
			gap: 1rem;
			margin: 0;
			padding: 0;
			list-style: none;
			
			flex-direction: column;
			justify-content: center;
			height: 50vh;
			}
			
flex-direction		flex-direction: row; "row" - it's a default direction when using "display: flex;"	
					column;	then using "column" it swithes the main axis, so all of this parent child will be ordered to column.	

justify-content		justify-content: flex-start; (- it's a default, means top) center; flex-end; (bottom), space-between; space-around; space-evenly;

align-iteams		align-iteams: stretch; baseline; flex-start; flex-end; center; (it's some similar like "justify-content" only to oposit axis)

height			height: 100vh; min-height: 50vh; use this property along with "flex-direction: column;" & 'justify-content: space-between;"


	   main axis
justify-		— to position something along the primary axis.
content			— a group of “stuff” that can be distributed.

	  cross axis
align- 			— to position something along the cross axis.
items 			— single items that can be positioned individually.
content			— a group of “stuff” that can be distributed. Must use with "flex: wrap;"
flex-wrap		wrap; or no-wrap; it's a command for PARENTS. With "flex-wrap: wrap", we no longer have a single primary axis line that can skewer each item.

flex-flow		"flex-flow: row wrap" this commansd it's a combination of  properties "flex-direction" and "flex-wrap".


diplay: flex;		this command belongs to PARENT but it has efect on a CHILD with default values:
			flex-grow: 0;
			flex-shrink: 1;
			flex-basis: auto;???
			this values can be added to CHILD as shorthand command "flex: <value>;" or as one-three command of the three comands.
			


<<<<<<<<<<<<<<< For CHILD >>>>>>>>>>>>>>>>>>

flex-grow		.property li {
flex-shrink			flex-grow: 0;
this's definition		flex-shrink: 1;
for child				}
			
flex			has three default values so you can use it with:
			one value shorthand  "flex: 1;"
						flex-grow: 1;
						flex-shrink: 1;
						flex-basis: 0; (default)
						
					      "flex: 2;"
						flex-grow: 2;
						flex-shrink: 1; 	
						flex-basis: 0; (default)
						
					     "flex: auto;"
						flex-grow: 1;
						flex-shrink: 1;
						flex-basis: auto;
						
			
			two values  shorthand  "flex: 0 auto;"
						flex-grow: 0;
						flex-shrink: 0;
						flex-basis: auto;
						
						
			
			three values "flex: 1 auto 0;"   
					flex-grow: 1;
					flex-basis: auto;
					flex-shrink: 0;
					

flex-grow		flex-grow: 0; 1; 2; 3; 4; etc.
			flex-grow = <number [0,∞]>  

flex-shrink		flex-shrink: 0; 1; 2; 3; 4; etc.
			flex-shrink = <number [0,∞]> 

flex-basis		flex-basis: 0; _px; 100%; auto; max-content; min-content; fit-content;
			flex-basis = content | <'width'>  
			you can think it's like a property "width", because it's very similar to it. But have some diferences, 
			It's like width or height, but pegged to the primary axis
			
			if using "flex-basis" usualy don't use "width" property.
			The shorthand value defaults to flex-basis is "Auto".


> *			.property > * { } when using "> *" you adding rules for all childs to the parents property.

align-self		align-self: stretch; flex-start; center; flex-end; baseline; (use this property for changing behavier of one element, wich will beahave diff. to his siblings).

min-with		by setting "min-width: _px" directly on the Flex child, we tell the Flexbox algorithm to overwrite the “built-in” minimum width
			WARRNING check it after use, because it's can make everything even worse.
min-height

gap			"gap: _px;" it's works only together with command "justify-content: flex-start; center; or flex-end;"

margin			it can by "margin-left: 0 (default); auto; etc" or "margin-right: 0 (default); auto; etc" WARNNIG I'm not familier with this!!!!!!! 


-------------------------- flex Basic Value --------------------------------

flex: initial;		flex: 0 1 auto;
flex: auto;		flex: 1 1 auto; 		 
flex: none;		flex: 0 0 auto;
flex: <positive numb.>	flex: <positive number> 1 0;


---------------------<<<<<<<<<<< BOX MODEL >>>>>>>>>>>>>------------------------------------

BOX MODEL		The box's area stops at the border — it does not extend into the "margin".

content box		The area where your content is displayed. 
properties		"inline-size" "block-size" "width" "height" "writing-mode"

pading box		the padding sits around the content
properties		"pading" "pading-top" "pading-right" "pading-bottom" "pading-left"

border box		The border box wraps the content and any padding. It MUST had added 3 values: width, style and color. Other wise it's not a full rule, so it wont apear on screan. For ex.: "{border: 5px solid;}"
properties		"border" "border-width" "border-style" "border-color" 
aditional properties	where is a lot of aditional properties to define witch border you want to target, like "top" "right" "bottom" "left" in ex. "border-top-color".

margin box		The margin is the outermost layer, wrapping the content, padding, and border		
properties		"margin" "margin-top" "margin-right" "margin-bottom" "margin-left"


ALTERNATE BOX MODEL	The content area of alternative box "width" is that "width" without the width for the "padding" and "border": alternative box width = width of box model - (width of pading + width of border) 

.alternate{}		in simple way just add "width" and "height" properties for ".alternate" selector with value = width + 2X(border width + padding width) and the same idea for height, all numbers comes from box model ".box{}".

box-sizing		box-sizing: content-box /* contain (tilpti, varžyti) the border and the padding for the elements width and hight */
			box-sizing: border-box  /* substracted (atimta) the border and the padding for the elements width and hight */


box-sizing		html {
			box-sizing: border-box;
			} 
			*,
			*::before,
			*::after {
			  box-sizing: inherit;
			}
			

---------------------------------- BACKGROUND -----------------------------------------------


padding			padding: 0em;
color:			color: red; <chose the text color>.
backgroud-color		backgroud-color: #1100ff; <chose the background color, always use aditional color in case the image doesn't load> 
background-repeat	background-repeat: repeat-x; repeat-y; no-repeat;
background-image	background-image: url("image.png"); <don't use too small or to big image!!!>
background-size		background-size: cover; 100%; 100% 50px;

background-blend-mode	background-blend-mode: multiply; lighten; <this property blending image with a backgroud color, so the text became more readible>
			<multiply - darkening>
			<lighten - lightening>
			
backgroud-position	backgroud-position: bottom right; center center; top left; 10px; 10px 10px; 50% 10px; top 20px right; top 20px right 50px; right -20% 0px;
			<this property lets croping the imige point you chose it. You can use for: x-axis left; center; right; y-axis top; center; bottom;>

Tips&Tricks		you can use two backgroud picture in case to do this use two values in a property you want to have it, i.e:
			background-image: url("image.png");
			background-image: url("image1.png");
			background-repeat: repeat-x; no-repeat; <in this case image.png will repeat horizontaly ant the image1.png wont repeat
			

------------------------------ FONT ----------------------------------------------------

font-family		can be a single value or a comma-separated list of values that determine what font an element uses.
			If a browser cannot find or does not support the first font in a list, it will use the next one, 
			then the next one and so on until it finds a supported and valid font.
			e.g. <<font-family: "Times New Roman", sans-serif;>>

font-size		font-size will set the size of the font. e.g. <<font-size: 22px>>

font-weight		affects the boldness of text. It can be a keyword, e.g. <<font-weight: bold>>, or a number between 1 and 1000.
			e.g. font-weight: 700 (the equivalent of bold). Usually, the numeric values will be in increments of 100 up to 900.

text-align:		you can use: left; center; right; justify; comamnds.
			using this comand in css "body {}" tag you can change position of hole data in web page. You can use center, left, right etc.

img			height and width values will be the same as the actual image file’s height and width.
height			If you wanted to adjust the size of the image without causing it to lose its proportions, 
			you would use a value of “auto” for the height property and adjust the width value:

			img {
			  height: auto;
			  width: 500px;
			}
			For example, if an image’s original size was 500px height and 1000px width,
			using the above CSS would result in a height of 250px.


---------------------------------------- LIST ------------------------------------------

<li>			By default the list item marker is to the left of the content within the <li> element. 
			This list style positioning is described as outside, meaning all of the content will appear directly to the right,
			outside of the list item marker.
			
list-style-position:	You can use "inside;" "outside;" "inheritant;" list style position.

list-style-type		adding diferent type of bullet in the bigining of the list: square, circle, round, lower-alpha etc.
type			Sets the numbering type: 
a			for lowercase letters
A			for uppercase letters
i			for lowercase Roman numerals
I			for uppercase Roman numerals
1			for numbers (default)


list-style-image:	for list bullet sign you can add even an image using "list-style-image: url( );"

list-style:		When using the "list-style" property, we can use one or all list style property values at a time. The order of these shorthand values should be "list-style-type" followed by "list-style-position".


width:			create width of you marked elements (text, image etc.)
margin:			create empty space around marked element text, pics etc.
border:			crerate border around the box and you can style it with "border-style"
padding:		create space with backgroud color inside the box.

			Shortcut you can use for any comand (margin, border, padding etc.) imagine it goes clockwise, starting from 12h.
			forE. "pading: 10px; 20px; 25px; 50px;" it means: "pading: top; right; bottom;

			Using two values: "padding: 100px; 50px;" It means first value Top & Bottom; Second value Right & Left;

			Using three values: "padding: 100px; 20px; 50px;" It means First value Top; Second value Right & Left; Third value Bottom;

		        TOTAL width is a sum of: width + margin + border + padding.


display:		The quickest way to display a list horizontaly on a single line is to give the <li> elements a display property value of inline or inline-block. 
inline-block;		The inline-block property value allows us to easily add vertical margins and other spacing to the <li> elements,
inline;			whereas the inline property value does not.

float:			it's almost the same as "display" but the difference is that "float" does not removes the list item marker.
			To prevent the list item marker from being displayed on top of other <li> elements, a horizontal margin or padding should be added.
clearfix		As when floating any element, this breaks the flow of the page. We must remember to clear our floats—most commonly with the clearfix technique—and return the page back to its normal flow.



text-transform:		you can change letters using "text-transform: uppercase;" or "lowecase;"


-----------------------------------------------------
INSPECT
Best browser for "inspect" is "firefox" acording to Kevin Powell

INSPECT on Chrome

inspect			F12 or Right click > Inspect

open RUN task		on opened inspect window: ctrl+shift+p > enter some fraze
Change visibility	ctrl+shift+p > "doc to botom" or "Undoc..."
dark- ligt theme	ctrl+shift+p > "dark..."
animation tab		ctrl+shift+p > animation

Search bar		ctrl+f
contrast ratio		inspect desired element > double click on color value - now you can see "contrast ratio" it's a visibility of text on background.






